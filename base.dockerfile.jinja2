{% embed "dockerfile/base.jinja2" %}

FROM base as dev

{% embed "dockerfile/dev.jinja2" %}

{% embed "dockerfile/runit.jinja2" %}
{% embed "dockerfile/ruby.jinja2" %}
{% embed "dockerfile/boost.jinja2" %}
{% embed "dockerfile/yaml-cpp.jinja2" %}
{% embed "dockerfile/leatherman.jinja2" %}
{% embed "dockerfile/cpp-hocon.jinja2" %}
{% embed "dockerfile/facter.jinja2" %}
{% embed "dockerfile/puppet.jinja2" %}

FROM dev as prepare

COPY --from=dev_runit "{{ install_dir }}" "{{ install_dir }}"
COPY --from=dev_puppet "{{ install_dir }}" "{{ install_dir }}"

{% block dev_build_post %}
RUN find /opt/puppetizer/ -iname "*.a" -delete \
    && find /opt/puppetizer/ -iname "*.so" -type f -exec strip -ps {} \; \
    && find /opt/puppetizer/ \( -name "*.so" -or -perm +{% if system == "alpine" %}0001{% else %}x{% endif %} \) -type f -exec strip -psv {} 2> /dev/null \;

RUN rm -rf /opt/puppetizer/include /opt/puppetizer/share/man /opt/puppetizer/lib/ruby/gems/*/cache/
{% endblock %}

FROM base as local
ADD ./opt /opt/puppetizer/

RUN sed -i /opt/puppetizer/share/common.sh \
    -e 's@%PUPPETIZER_PKG_CLEANUP%@{{ packages_cmd_clean }}@g' \
    -e 's@%PUPPETIZER_PKG_INIT%@{{ packages_cmd_init }}@g' \
    -e 's@%PUPPETIZER_PKG_INSTALL%@{{ packages_cmd_install }}@g'

ADD ./puppet /opt/puppetizer/puppet/modules-internal/puppetizer

FROM base

LABEL \
    org.opencontainers.image.authors="Arkadiusz DziÄ™giel <arkadiusz.dziegiel@glorpen.pl>" \
    org.opencontainers.image.url="https://github.com/glorpen/docker-puppetizer-base" \
    org.opencontainers.image.documentation="https://github.com/glorpen/docker-puppetizer-base" \
    org.opencontainers.image.source="https://github.com/glorpen/docker-puppetizer-base" \
    org.opencontainers.image.title="Puppetizer" \
    org.opencontainers.image.description="Base for images configured by Puppet"

COPY --from=prepare "{{ install_dir }}" "{{ install_dir }}"

COPY --from=local "{{ install_dir }}" "{{ install_dir }}"

HEALTHCHECK CMD ["/opt/puppetizer/bin/health"]
CMD ["/opt/puppetizer/bin/runit-init"]

LABEL \
    org.opencontainers.image.created="{{ now.isoformat() }}" \
    org.opencontainers.image.version="{{ version }}"
