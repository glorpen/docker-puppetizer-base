{% extends "base.dockerfile.jinja2" %}

{% block base %}
RUN apk add --no-cache \
    bzip2 ca-certificates libffi procps yaml zlib \
    libcrypto1.0 gdbm readline libressl \
    libcurl boost yaml-cpp boost-program_options libblkid \
    tar xz shadow
{% endblock %}

{% block base_dev %}
# ruby
RUN apk add \
        autoconf \
        bison \
        bzip2-dev \
        ca-certificates \
        coreutils \
        dpkg-dev dpkg \
        gcc \
        gdbm-dev \
        glib-dev \
        libc-dev \
        libffi-dev \
        libressl-dev \
        libxml2-dev \
        libxslt-dev \
        linux-headers \
        make \
        ncurses-dev \
        readline-dev \
        ruby \
        yaml-dev \
        zlib-dev
# other
RUN apk add cmake boost-dev yaml-cpp-dev g++ curl-dev

{% endblock %}

{% block prepare_ruby %}
{# mostly taken from https://github.com/docker-library/ruby #}

RUN wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/{{ puppet_package.ruby.version.major }}.{{ puppet_package.ruby.version.minor }}/ruby-{{ puppet_package.ruby.version }}.tar.xz" \
    && echo "{{ puppet_package.ruby.sha256 }} *ruby.tar.xz" | sha256sum -c - \
    \
    && mkdir -p /usr/src/ruby \
    && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \
    && rm ruby.tar.xz
{% endblock %}

{% block build_ruby %}
WORKDIR /usr/src/ruby

# https://github.com/docker-library/ruby/issues/196
# https://bugs.ruby-lang.org/issues/14387#note-13 (patch source)
# https://bugs.ruby-lang.org/issues/14387#note-16 ("Therefore ncopa's patch looks good for me in general." -- only breaks glibc which doesn't matter here)
RUN wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch' \
    && echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch' | sha256sum -c - \
    && patch -p1 -i thread-stack-fix.patch

RUN set -ex \
    \
# hack in "ENABLE_PATH_CHECK" disabling to suppress:
#   warning: Insecure world writable dir
    && { \
        echo '#define ENABLE_PATH_CHECK 0'; \
        echo; \
        cat file.c; \
    } > file.c.new \
    && mv file.c.new file.c

RUN set -ex \
    && autoconf \
    && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
# the configure script does not detect isnan/isinf as macros
    && export ac_cv_func_isnan=yes ac_cv_func_isinf=yes \
    && optflags=-Os ./configure \
        --prefix={{ install_dir }} \
        --build="$gnuArch" \
        --disable-install-doc --disable-install-rdoc --disable-install-capi \
        --enable-shared \
    && make -j "$(nproc)" \
    && make install

{#
    --with-sitedir=no --with-sitearchdir=no --with-vendordir=no 
    && runDeps="$( \
        scanelf --needed --nobanner --format '%n#p' --recursive {{ install_dir }} \
            | tr ',' '\n' \
            | sort -u \
            | awk 'system("[ -e {{ install_dir }}/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )"
#}

RUN cd / \
    && {{ install_dir }}/bin/gem update --system "{{ puppet_package.ruby_gems.version }}" \
    && {{ install_dir }}/bin/gem install bundler --version "{{ puppet_package.ruby_bundler.version }}" --force \
    && rm -r /root/.gem/


ENV PATH {{ install_dir }}/bin:$PATH

RUN apk del ruby
{% endblock %}

{% block prepare_facter %}
RUN wget -O /root/facter.tar.gz "https://github.com/puppetlabs/facter/archive/{{ puppet_package.facter.version }}.tar.gz" \
    && echo "{{ puppet_package.facter.sha256 }} */root/facter.tar.gz" | sha256sum -c - \
    && mkdir -p /usr/src/facter \
    && tar -xpf /root/facter.tar.gz -C /usr/src/facter --strip-components=1 \
    && rm /root/facter.tar.gz

RUN wget -O /root/leatherman.tar.gz "https://github.com/puppetlabs/leatherman/archive/{{ puppet_package.leatherman.version }}.tar.gz" \
    && echo "{{ puppet_package.leatherman.sha256 }} */root/leatherman.tar.gz" | sha256sum -c - \
    && mkdir -p /usr/src/leatherman \
    && tar -xpf /root/leatherman.tar.gz -C /usr/src/leatherman --strip-components=1 \
    && rm /root/leatherman.tar.gz

RUN wget -O /root/cpp-hocon.tar.gz "https://github.com/puppetlabs/cpp-hocon/archive/{{ puppet_package.cpp_hocon.version }}.tar.gz" \
    && echo "{{ puppet_package.cpp_hocon.sha256 }} */root/cpp-hocon.tar.gz" | sha256sum -c - \
    && mkdir -p /usr/src/cpp-hocon \
    && tar -xpf /root/cpp-hocon.tar.gz -C /usr/src/cpp-hocon --strip-components=1 \
    && rm /root/cpp-hocon.tar.gz

RUN sed -i /usr/src/facter/cmake/FindCPPHOCON.cmake -e 's/libcpp-hocon.a/libcpp-hocon.so/g' \
    && sed -i /usr/src/facter/lib/gemspec.in -e "s/required_ruby_version.*/required_ruby_version = '>= 1.9.0'/g"
{% endblock %}

{% block build_facter %}
WORKDIR /usr/src/leatherman

RUN mkdir release \
    && cd release \
    && cmake -DCMAKE_CXX_FLAGS="-Os" -DCMAKE_INSTALL_PREFIX="{{ install_dir }}" -DLEATHERMAN_ENABLE_TESTING=FALSE -DLEATHERMAN_SHARED=TRUE -DLEATHERMAN_USE_ICU=TRUE -DCMAKE_INSTALL_RPATH="{{ install_dir }}/lib" .. \
    && make -j "$(nproc)" \
    && make install

WORKDIR /usr/src/cpp-hocon

RUN mkdir release \
    && cd release \
    && cmake -DCMAKE_CXX_FLAGS_RELEASE="-Os" -DCMAKE_INSTALL_PREFIX="{{ install_dir }}" -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_RPATH="{{ install_dir }}/lib" .. \
    && make -j "$(nproc)" \
    && make install

WORKDIR /usr/src/facter

RUN mkdir release \
    && cd release \
    && cmake -DCMAKE_CXX_FLAGS_RELEASE="-Os" -DCMAKE_INSTALL_PREFIX="{{ install_dir }}" -DBUILD_SHARED_LIBS=TRUE .. \
    && make -j "$(nproc)" \
    && make install

{% endblock %}

{% block prepare_puppet %}
RUN wget -O /root/puppet.tar.gz "https://github.com/puppetlabs/puppet/archive/{{ puppet_package.puppet.version }}.tar.gz" \
    && echo "{{ puppet_package.puppet.sha256 }} */root/puppet.tar.gz" | sha256sum -c - \
    && mkdir -p /usr/src/puppet \
    && tar -xpf /root/puppet.tar.gz -C /usr/src/puppet --strip-components=1 \
    && rm /root/puppet.tar.gz
{% endblock %}

{% block build_puppet %}
WORKDIR /usr/src/puppet

COPY puppet/Gemfile.local /usr/src/puppet/Gemfile.local

RUN grep diff-lcs Gemfile >> Gemfile.local

RUN BUNDLE_SILENCE_ROOT_WARNING=1  HIERA_VERSION="{{ puppet_package.hiera.version }}" FACTER_LOCATION="file:///usr/src/facter" \
    /opt/puppetizer/bin/bundle install --system --without=test:development:packaging:documentation:features \
    && ./install.rb --no-rdoc --no-ri \
    && rm -rf /opt/puppetlabs
{# && ./install.rb --destdir /opt/puppetizer/ --no-rdoc --no-ri --vardir=/opt/puppetizer/cache --logdir=/var/log/puppetizer/puppet --rundir=/var/run/puppetizer --localedir=/opt/puppetizer/share/locale \
    --configdir={{ install_dir }}/etc/puppetlabs/puppet --codedir={{ install_dir }}/etc/code #}

{% if system == "alpine" %}
RUN /opt/puppetizer/bin/puppet module install puppetlabs-apk \
    && cd {{ install_dir }}/etc/code/modules/apk/ \
    && wget -O - https://github.com/puppetlabs/puppetlabs-apk/pull/4.diff | patch -p1
{% endif %}

{% endblock %}
